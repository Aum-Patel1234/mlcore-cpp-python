name: CI - Build + Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup and run vcpkg
        uses: microsoft/vcpkg-action@v5
        with:
          # This action will find the vcpkg.json file you create (see below)
          # and install the C++ dependencies listed in it.
          vcpkgDirectory: ${{ github.workspace }}
          vcpkgJsonGlob: 'vcpkg.json'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure and build C++ extension
        run: |
          mkdir -p cpp/build
          cd cpp/build
          # The vcpkg-action automatically sets the CMAKE_TOOLCHAIN_FILE env var,
          # so CMake finds the libraries without any extra hints.
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release

      - name: Test Python bindings
        run: |
          # Add the build directory to PYTHONPATH so the module can be found
          export PYTHONPATH=$PYTHONPATH:$(pwd)/cpp/build
          python -c "import mlcore_cpp; print('Import successful!')"
