name: CI - Build + Test (Ubuntu + Mamba)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    # Set default shell to bash -l to ensure conda environments are activated
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Mambaforge (fast conda)
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-activate-base: true
          python-version: '3.11'
          miniconda-version: 'latest'
          mamba-version: '*'
          channels: conda-forge

      - name: Install all dependencies with Mamba
        run: |
          # Install C++, Python, and build tools from conda-forge channel
          # This single command replaces apt-get and pip
          mamba install -y \
            cmake \
            cxx-compiler \
            numpy \
            pybind11 \
            scikit-learn \
            pandas \
            xtensor \
            xtensor-python \
            xtensor-blas \
            openblas

      - name: Configure & build with CMake
        run: |
          mkdir -p cpp/build
          cd cpp/build
          # No hints needed! CMake automatically finds everything in the active conda env.
          cmake .. -DCMAKE_BUILD_TYPE=Release
          cmake --build . --config Release -- -j2

      - name: Test Python bindings
        run: |
          # Add the build directory to the Python path
          export PYTHONPATH=$PYTHONPATH:$(pwd)/cpp/build
          python -c "import mlcore_cpp; print('âœ… Import successful!')"
