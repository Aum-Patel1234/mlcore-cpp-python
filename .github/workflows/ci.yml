name: CI - Build + Test (Ubuntu)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2
        with:
          cmake-version: '3.26'

      - name: Install system dependencies and Python packages
        run: |
          sudo apt-get update
          # python3-dev gives Python headers (Python.h) required by pybind11/CMake
          sudo apt-get install -y python3-dev python3-pip python3-venv build-essential
          python -m pip install --upgrade pip
          # install everything from requirements.txt (must include numpy, pybind11)
          pip install -r requirements.txt

      - name: Build C++ extension (CMake)
        run: |
          mkdir -p cpp/build
          cd cpp/build

          # Explicitly expose the Python executable + include dirs to CMake
          PY_BIN=$(which python)
          PY_INCLUDE=$(python -c "from sysconfig import get_paths as gp; print(gp()['include'])")
          NUMPY_INCLUDE=$(python -c "import numpy as np; print(np.get_include())")

          echo "Using python: $PY_BIN"
          echo "Python include: $PY_INCLUDE"
          echo "NumPy include: $NUMPY_INCLUDE"

          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DPython3_EXECUTABLE="$PY_BIN" \
            -DPython3_INCLUDE_DIR="$PY_INCLUDE" \
            -DNUMPY_INCLUDE_DIR="$NUMPY_INCLUDE"

          cmake --build . --config Release

      - name: Test Python bindings
        run: |
          # Add the build directory to PYTHONPATH and try importing the built module
          python -c "import sys; sys.path.append('cpp/build'); import mlcore_cpp; print('Import successful!')"
          # pytest -q   # enable if you have tests ready

