name: Build C++ Module (vcpkg)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_DIR: ${{ github.workspace }}/cpp/build
      VCPKG_DIR: ${{ github.workspace }}/vcpkg
      VCPKG_TRIPLET: x64-linux

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Show Python info (debug)
        run: |
          python -V
          which python
          python -c "import sys, sysconfig; print('prefix=', sys.prefix); print('platlib=', sysconfig.get_paths().get('platlib'))"
          pip --version

      - name: Install system packages (build tools, deps)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential cmake ninja-build pkg-config git wget unzip \
            python3-dev libpython3-dev python3-pip \
            libopenblas-dev liblapack-dev
          dpkg -l | sed -n '1,200p'

      - name: Install pip basics (pybind11 via pip helps CMake detection)
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pybind11 numpy

      - name: Install vcpkg dependencies (manifest mode)
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgDirectory: ${{ env.VCPKG_DIR }}
          vcpkgJsonGlob: 'vcpkg.json'
          triplet: ${{ env.VCPKG_TRIPLET }}

      - name: Show vcpkg top-level (debug)
        run: |
          echo "VCPKG_DIR=${{ env.VCPKG_DIR }}"
          ls -la ${{ env.VCPKG_DIR }} || echo "vcpkg dir missing"
          echo "Toolchain: ${{ env.VCPKG_DIR }}/scripts/buildsystems/vcpkg.cmake"
          file ${{ env.VCPKG_DIR }}/scripts/buildsystems/vcpkg.cmake || true

      - name: Prepare build dir
        run: |
          mkdir -p "${BUILD_DIR}"
          ls -la cpp || echo "Warning: 'cpp' directory not found"

      - name: Configure CMake (use vcpkg toolchain)
        run: |
          export PYTHON_EXECUTABLE="$(which python)"
          cmake -S cpp -B "${BUILD_DIR}" -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_DIR }}/scripts/buildsystems/vcpkg.cmake \
            -DVCPKG_TARGET_TRIPLET=${{ env.VCPKG_TRIPLET }} \
            -DPYTHON_EXECUTABLE="${PYTHON_EXECUTABLE}" \
            -D CMAKE_EXPORT_COMPILE_COMMANDS=ON

      - name: Build project with CMake
        run: |
          cmake --build "${BUILD_DIR}" --config Release -- -j$(nproc)

      - name: Generate pyi stubs (if script exists)
        run: |
          if [ -x "./generate_stubs.sh" ]; then
            export BUILD_DIR=${BUILD_DIR}
            export STUB_OUT=${{ github.workspace }}/cpp/stubs
            mkdir -p "$STUB_OUT"
            bash ./generate_stubs.sh
          else
            echo "No generate_stubs.sh found â€” skipping stubs generation"
          fi

      - name: List build outputs (debug)
        run: |
          echo "Contents of build dir:"
          ls -la "${BUILD_DIR}" || true
          echo "Contents of cpp:"
          ls -la cpp || true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: cpp-build
          path: |
            ${{ github.workspace }}/cpp/build
            ${{ github.workspace }}/cpp/stubs
